{"ast":null,"code":"var _jsxFileName = \"/Users/crazychukz/Desktop/DEV/FSND/projects/02_trivia_api/starter/frontend/src/components/LeaderBoard.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport QuestionView from \"./QuestionView\";\nconst hostURL = 'http://127.0.0.1:5000';\n\nclass LeaderBoard extends Component {\n  constructor() {\n    super();\n\n    this.getPlayers = () => {\n      $.ajax({\n        url: hostURL + \"/players\",\n        type: \"GET\",\n        success: result => {\n          this.setState({\n            players: result.players,\n            totalPlayers: result.total_players\n          });\n          return;\n        },\n        error: error => {\n          alert('Unable to load players. Please try your request again');\n          return;\n        }\n      });\n    };\n\n    this.state = {\n      players: [],\n      totalPlayers: 0\n    };\n  }\n\n  componentDidMount() {\n    this.getPlayers();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"quiz-play-holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"play-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Leader Board\"), React.createElement(\"div\", {\n      className: \"category-holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.state.players.map(player => {\n      return React.createElement(\"div\", {\n        key: player.id,\n        value: player.id,\n        className: \"play-category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, player.username, React.createElement(\"span\", {\n        className: \"total_score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, player.total_score));\n    })));\n  }\n\n}\n\nexport default LeaderBoard;","map":{"version":3,"sources":["/Users/crazychukz/Desktop/DEV/FSND/projects/02_trivia_api/starter/frontend/src/components/LeaderBoard.js"],"names":["React","Component","$","QuestionView","hostURL","LeaderBoard","constructor","getPlayers","ajax","url","type","success","result","setState","players","totalPlayers","total_players","error","alert","state","componentDidMount","render","map","player","id","username","total_score"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,MAAMC,OAAO,GAAG,uBAAhB;;AAGA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAChCK,EAAAA,WAAW,GAAG;AACV;;AADU,SAYdC,UAZc,GAYD,MAAM;AACfL,MAAAA,CAAC,CAACM,IAAF,CAAO;AACHC,QAAAA,GAAG,EAAEL,OAAO,aADT;AAEHM,QAAAA,IAAI,EAAE,KAFH;AAGHC,QAAAA,OAAO,EAAGC,MAAD,IAAY;AACjB,eAAKC,QAAL,CAAc;AACVC,YAAAA,OAAO,EAAEF,MAAM,CAACE,OADN;AAEVC,YAAAA,YAAY,EAAEH,MAAM,CAACI;AAFX,WAAd;AAIA;AACH,SATE;AAUHC,QAAAA,KAAK,EAAGA,KAAD,IAAW;AACdC,UAAAA,KAAK,CAAC,uDAAD,CAAL;AACA;AACH;AAbE,OAAP;AAeH,KA5Ba;;AAEV,SAAKC,KAAL,GAAa;AACTL,MAAAA,OAAO,EAAE,EADA;AAETC,MAAAA,YAAY,EAAE;AAFL,KAAb;AAIH;;AAEDK,EAAAA,iBAAiB,GAAG;AAChB,SAAKb,UAAL;AACH;;AAoBDc,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKF,KAAL,CAAWL,OAAZ,CAAqBQ,GAArB,CAAyBC,MAAM,IAAI;AAChC,aACI;AACI,QAAA,GAAG,EAAEA,MAAM,CAACC,EADhB;AAEI,QAAA,KAAK,EAAED,MAAM,CAACC,EAFlB;AAGI,QAAA,SAAS,EAAC,eAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKKD,MAAM,CAACE,QALZ,EAMI;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BF,MAAM,CAACG,WAAtC,CANJ,CADJ;AAUH,KAXA,CADL,CAFJ,CADJ;AAmBH;;AAnD+B;;AAuDpC,eAAerB,WAAf","sourcesContent":["import React, {Component} from 'react';\nimport $ from 'jquery';\nimport QuestionView from \"./QuestionView\";\n\nconst hostURL = 'http://127.0.0.1:5000';\n\n\nclass LeaderBoard extends Component {\n    constructor() {\n        super();\n        this.state = {\n            players: [],\n            totalPlayers: 0\n        }\n    }\n\n    componentDidMount() {\n        this.getPlayers();\n    }\n\n    getPlayers = () => {\n        $.ajax({\n            url: hostURL + `/players`,\n            type: \"GET\",\n            success: (result) => {\n                this.setState({\n                    players: result.players,\n                    totalPlayers: result.total_players,\n                });\n                return;\n            },\n            error: (error) => {\n                alert('Unable to load players. Please try your request again');\n                return;\n            }\n        })\n    };\n\n    render() {\n        return (\n            <div className=\"quiz-play-holder\">\n                <div className=\"play-text\">Leader Board</div>\n                <div className=\"category-holder\">\n                    {(this.state.players).map(player => {\n                        return (\n                            <div\n                                key={player.id}\n                                value={player.id}\n                                className=\"play-category\"\n                            >\n                                {player.username}\n                                <span className=\"total_score\">{player.total_score}</span>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default LeaderBoard;"]},"metadata":{},"sourceType":"module"}