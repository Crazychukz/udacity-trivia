{"ast":null,"code":"var _jsxFileName = \"/Users/crazychukz/Desktop/DEV/FSND/projects/02_trivia_api/starter/frontend/src/components/FormView.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport '../stylesheets/FormView.css';\n\nclass FormView extends Component {\n  constructor(props) {\n    super();\n\n    this.submitQuestion = event => {\n      event.preventDefault();\n      $.ajax({\n        url: 'http://127.0.0.1:5000/questions',\n        //TODO: update request URL\n        type: \"POST\",\n        dataType: 'json',\n        contentType: 'application/json',\n        data: JSON.stringify({\n          question: this.state.question,\n          answer: this.state.answer,\n          difficulty: this.state.difficulty,\n          category: this.state.category\n        }),\n        xhrFields: {\n          withCredentials: true\n        },\n        crossDomain: true,\n        success: result => {\n          document.getElementById(\"add-question-form\").reset();\n          return;\n        },\n        error: error => {\n          alert('Unable to add question. Please try your request again');\n          return;\n        }\n      });\n    };\n\n    this.submitCategory = event => {\n      event.preventDefault();\n      $.ajax({\n        url: 'http://127.0.0.1:5000/categories',\n        //TODO: update request URL\n        type: \"POST\",\n        dataType: 'json',\n        contentType: 'application/json',\n        data: JSON.stringify({\n          type: this.state.type\n        }),\n        xhrFields: {\n          withCredentials: true\n        },\n        crossDomain: true,\n        success: result => {\n          document.getElementById(\"add-cat-form\").reset();\n          return;\n        },\n        error: error => {\n          alert('Unable to add category. Please try your request again');\n          return;\n        }\n      });\n    };\n\n    this.submitUser = event => {\n      event.preventDefault();\n      $.ajax({\n        url: 'http://127.0.0.1:5000/players',\n        //TODO: update request URL\n        type: \"POST\",\n        dataType: 'json',\n        contentType: 'application/json',\n        data: JSON.stringify({\n          username: this.state.username\n        }),\n        xhrFields: {\n          withCredentials: true\n        },\n        crossDomain: true,\n        success: result => {\n          document.getElementById(\"add-player-form\").reset();\n          return;\n        },\n        error: error => {\n          alert('Unable to add player. Please try your request again');\n          return;\n        }\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      question: \"\",\n      answer: \"\",\n      difficulty: 1,\n      category: 1,\n      categories: [],\n      type: \"\",\n      username: \"\"\n    };\n  }\n\n  componentDidMount() {\n    $.ajax({\n      url: \"http://127.0.0.1:5000/categories\",\n      //TODO: update request URL\n      type: \"GET\",\n      success: result => {\n        this.setState({\n          categories: result.categories\n        });\n        return;\n      },\n      error: error => {\n        alert('Unable to load categories. Please try your request again');\n        return;\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"forms-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form\",\n      id: \"add-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"play-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Add a New Trivia Question\"), React.createElement(\"form\", {\n      className: \"form-view\",\n      id: \"add-question-form\",\n      onSubmit: this.submitQuestion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Question\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"question\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Answer\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"answer\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Difficulty\"), React.createElement(\"select\", {\n      className: \"select\",\n      name: \"difficulty\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"option\", {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"option\", {\n      value: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"3\"), React.createElement(\"option\", {\n      value: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"4\"), React.createElement(\"option\", {\n      value: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"5\"))), React.createElement(\"div\", {\n      className: \"form-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Category\"), React.createElement(\"select\", {\n      className: \"select\",\n      name: \"category\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, this.state.categories.map(cat => {\n      return React.createElement(\"option\", {\n        key: cat.id,\n        value: cat.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, cat.type);\n    }))), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"play button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Submit\"))), React.createElement(\"div\", {\n      className: \"form\",\n      id: \"add-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"play-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Add a New Category\"), React.createElement(\"form\", {\n      className: \"form-view\",\n      id: \"add-cat-form\",\n      onSubmit: this.submitCategory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Type\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"type\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"play button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Submit\"))), React.createElement(\"div\", {\n      className: \"form\",\n      id: \"add-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"play-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Add a New Player\"), React.createElement(\"form\", {\n      className: \"form-view\",\n      id: \"add-player-form\",\n      onSubmit: this.submitUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"play button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default FormView;","map":{"version":3,"sources":["/Users/crazychukz/Desktop/DEV/FSND/projects/02_trivia_api/starter/frontend/src/components/FormView.js"],"names":["React","Component","$","FormView","constructor","props","submitQuestion","event","preventDefault","ajax","url","type","dataType","contentType","data","JSON","stringify","question","state","answer","difficulty","category","xhrFields","withCredentials","crossDomain","success","result","document","getElementById","reset","error","alert","submitCategory","submitUser","username","handleChange","setState","target","name","value","categories","componentDidMount","render","map","cat","id"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport $ from 'jquery';\n\nimport '../stylesheets/FormView.css';\n\nclass FormView extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n            question: \"\",\n            answer: \"\",\n            difficulty: 1,\n            category: 1,\n            categories: [],\n            type: \"\",\n            username: \"\"\n        }\n    }\n\n    componentDidMount() {\n        $.ajax({\n            url: `http://127.0.0.1:5000/categories`, //TODO: update request URL\n            type: \"GET\",\n            success: (result) => {\n                this.setState({categories: result.categories});\n                return;\n            },\n            error: (error) => {\n                alert('Unable to load categories. Please try your request again')\n                return;\n            }\n        })\n    }\n\n\n    submitQuestion = (event) => {\n        event.preventDefault();\n        $.ajax({\n            url: 'http://127.0.0.1:5000/questions', //TODO: update request URL\n            type: \"POST\",\n            dataType: 'json',\n            contentType: 'application/json',\n            data: JSON.stringify({\n                question: this.state.question,\n                answer: this.state.answer,\n                difficulty: this.state.difficulty,\n                category: this.state.category\n            }),\n            xhrFields: {\n                withCredentials: true\n            },\n            crossDomain: true,\n            success: (result) => {\n                document.getElementById(\"add-question-form\").reset();\n                return;\n            },\n            error: (error) => {\n                alert('Unable to add question. Please try your request again')\n                return;\n            }\n        })\n    };\n\n    submitCategory = (event) => {\n        event.preventDefault();\n        $.ajax({\n            url: 'http://127.0.0.1:5000/categories', //TODO: update request URL\n            type: \"POST\",\n            dataType: 'json',\n            contentType: 'application/json',\n            data: JSON.stringify({\n                type: this.state.type,\n            }),\n            xhrFields: {\n                withCredentials: true\n            },\n            crossDomain: true,\n            success: (result) => {\n                document.getElementById(\"add-cat-form\").reset();\n                return;\n            },\n            error: (error) => {\n                alert('Unable to add category. Please try your request again');\n                return;\n            }\n        })\n    };\n\n    submitUser = (event) => {\n        event.preventDefault();\n        $.ajax({\n            url: 'http://127.0.0.1:5000/players', //TODO: update request URL\n            type: \"POST\",\n            dataType: 'json',\n            contentType: 'application/json',\n            data: JSON.stringify({\n                username: this.state.username,\n            }),\n            xhrFields: {\n                withCredentials: true\n            },\n            crossDomain: true,\n            success: (result) => {\n                document.getElementById(\"add-player-form\").reset();\n                return;\n            },\n            error: (error) => {\n                alert('Unable to add player. Please try your request again');\n                return;\n            }\n        })\n    };\n\n    handleChange = (event) => {\n        this.setState({[event.target.name]: event.target.value})\n    };\n\n    render() {\n        return (\n            <div className=\"forms-wrapper\">\n                <div className=\"form\" id=\"add-form\">\n                    <h2 className=\"play-text\">Add a New Trivia Question</h2>\n                    <form className=\"form-view\" id=\"add-question-form\" onSubmit={this.submitQuestion}>\n                        <div className=\"form-input\">\n                            <label>Question</label>\n                            <input type=\"text\" name=\"question\" onChange={this.handleChange}/>\n                        </div>\n                        <div className=\"form-input\">\n                            <label>Answer</label>\n                            <input type=\"text\" name=\"answer\" onChange={this.handleChange}/>\n                        </div>\n                        <div className=\"form-input\">\n                            <label>Difficulty</label>\n                            <select className=\"select\" name=\"difficulty\" onChange={this.handleChange}>\n                                <option value=\"1\">1</option>\n                                <option value=\"2\">2</option>\n                                <option value=\"3\">3</option>\n                                <option value=\"4\">4</option>\n                                <option value=\"5\">5</option>\n                            </select>\n                        </div>\n                        <div className=\"form-input\">\n                            <label>Category</label>\n                            <select className=\"select\" name=\"category\" onChange={this.handleChange}>\n                                {this.state.categories.map(cat => {\n                                    return (\n                                        <option key={cat.id} value={cat.id}>{cat.type}</option>\n                                    )\n                                })}\n                            </select>\n                        </div>\n                        <button type=\"submit\" className=\"play button\">Submit</button>\n                    </form>\n                </div>\n\n                <div className=\"form\" id=\"add-form\">\n                    <h2 className=\"play-text\">Add a New Category</h2>\n                    <form className=\"form-view\" id=\"add-cat-form\" onSubmit={this.submitCategory}>\n                        <div className=\"form-input\">\n                            <label>Type</label>\n                            <input type=\"text\" name=\"type\" onChange={this.handleChange}/>\n                        </div>\n                        <button type=\"submit\" className=\"play button\">Submit</button>\n                    </form>\n                </div>\n\n                <div className=\"form\" id=\"add-form\">\n                    <h2 className=\"play-text\">Add a New Player</h2>\n                    <form className=\"form-view\" id=\"add-player-form\" onSubmit={this.submitUser}>\n                        <div className=\"form-input\">\n                            <label>Username</label>\n                            <input type=\"text\" name=\"username\" onChange={this.handleChange}/>\n                        </div>\n                        <button type=\"submit\" className=\"play button\">Submit</button>\n                    </form>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default FormView;\n"]},"metadata":{},"sourceType":"module"}